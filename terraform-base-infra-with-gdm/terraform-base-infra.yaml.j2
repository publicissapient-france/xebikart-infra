resources:

  # Terraform remote state GCS bucket
  - name: {{ env['project'] }}-terraform-state-bucket
    type: storage.v1.bucket
    properties:
      location: europe-west1
      storageClass: regional

  # Enable Resource Manager API on the project so Terraform can create
  # folders and projects since Deployment Manager is not able to
  - name: {{ env['project'] }}-service-enable-resource-manager
    action: gcp-types/servicemanagement-v1:servicemanagement.services.enable
    properties:
      consumerId: "project:{{ env['project'] }}"
      serviceName: cloudresourcemanager.googleapis.com

  # Enable Billing API on the project so Terraform can create
  # folders and projects since Deployment Manager is not able to
  - name: {{ env['project'] }}-service-enable-billing
    action: gcp-types/servicemanagement-v1:servicemanagement.services.enable
    properties:
      consumerId: "project:{{ env['project'] }}"
      serviceName: cloudbilling.googleapis.com

  # Enable IAM API on the project so we can create Terraform service
  # account
  - name: {{ env['project'] }}-service-enable-iam
    action: gcp-types/servicemanagement-v1:servicemanagement.services.enable
    properties:
      consumerId: "project:{{ env['project'] }}"
      serviceName: iam.googleapis.com

  # Enable Service Usage API on the project so we can create Terraform service
  # account
  - name: {{ env['project'] }}-service-enable-service-usage
    action: gcp-types/servicemanagement-v1:servicemanagement.services.enable
    properties:
      consumerId: "project:{{ env['project'] }}"
      serviceName: serviceusage.googleapis.com